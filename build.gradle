buildscript {
    apply from: "$rootDir/blessedDeps.gradle"
    repositories {
        maven { url "http://192.168.1.250:8081/nexus/content/repositories/central" }
    }
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'com.bmuschko.nexus'
    group = 'com.github.conanchen'
    version = 'master-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    //编译JAVA文件时采用UTF-8
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    extraArchive {
        sources = false
        tests = false
        javadoc = false
    }

    nexus {
        sign = true
        repositoryUrl = 'http://192.168.1.250:8081/nexus/content/repositories/releases/'
        snapshotRepositoryUrl = 'http://192.168.1.250:8081/nexus/content/repositories/snapshots/'
    }
    repositories {
        maven { url "http://192.168.1.250:8081/nexus/content/repositories/central" }
        maven { url "http://192.168.1.250:8081/nexus/content/repositories/releases" }
        maven { url "http://192.168.1.250:8081/nexus/content/repositories/snapshots" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

project.logger.lifecycle("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
project.logger.lifecycle("~~~~~~~~~~~~~~~~~ROOT BUILD DONE!~~~~~~~~~~~~~~~~~~");
project.logger.lifecycle("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");