plugins {
    id 'java'
    id 'idea'
    //id 'org.springframework.boot'
}


configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


dependencies {

    compile("com.graphql-java:graphql-java-tools:$GRAPHQL_JAVA_TOOLS_VERSION") {
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    }

    compile "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"

    // lombok
    compileOnly("org.projectlombok:lombok:$LOMBOK_VERSION")
}

//dependencyManagement {
//    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion") }
//}



project.logger.lifecycle("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
project.logger.lifecycle("~~~~~~~~~~~~~~~~~GUOI-GRAPHQL-JAVA-COMMON BUILD DONE!~~~~~~~~~~~~~~~~~~");
project.logger.lifecycle("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");