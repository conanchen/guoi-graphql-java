type CartConnection {
  # A list of edges.
  edges: [CartEdge!]!

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

type CartEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of CartEdge.
  node: Cart!
}

# An cart is a customer’s completed request to purchase one or more products from
# a shop. An cart is created when a customer completes the checkout process,
# during which time they provides an email address, billing address and payment information.
type Cart {

  # The Shop from which products was ordered
  shop: Shop!

  # List of the cart’s line items.
  lineItems(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int

    reverse: Boolean = false
  ): CartLineItemConnection!

  # Price of the cart before shipping and taxes.
  subtotalPrice: Money

}

type CartLineItemConnection {
  # A list of edges.
  edges: [CartLineItemEdge!]!

  # Information to aid in pagination.
  pageInfo: PageInfo!
}
type CartLineItemEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of CartLineItemEdge.
  node: CartLineItem!
}

# Represents a single line in an cart. There is one line item for each distinct product variant.
type CartLineItem {
  # List of custom attributes associated to the line item.
  customAttributes: [Attribute!]!

  # The number of products variants associated to the line item.
  quantity: Int!

  # The title of the product combined with title of the variant.
  title: String!

  # The product object associated to the line item.
  variant: Product
}
