
# The Root Query for the application
type Query {
  # A list of catalog.
  catalogs(

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int

    # Ordering options for repositories returned from the connection
    # orderBy: RepositoryOrder

  ): CatalogConnection!

  # Lookup a customer by phoneno
  customer(
    # The person's phoneno.
    phoneno: String!
  ): Customer

  # The currently authenticated user.
  viewer: User!
}

# The Root Mutation for the application
type Mutation {
    createCustomer(firstName: String, lastName: String, email: String!):Customer!
}


# An object with an ID.
interface Node {
  # ID of the object.
  id: ID!
}


# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, the cursor to continue.
  endCursor: String

  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String
}


## The set of valid sort keys for the products query.
#enum ProductCatalogSortKeys {
#  MANUAL
#  BEST_SELLING
#  TITLE
#  PRICE
#  CREATED
#  CATALOG_DEFAULT
#  ID
#  RELEVANCE
#}

# Date implementation
scalar DateTime